{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\OneDrive\\\\Desktop\\\\skillshare-hub\\\\Front-end\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport Toast from '../components/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [toastMessage, setToastMessage] = useState('');\n  const defaultProfilePic = '/default-profile.jpg'; // Path to the default profile picture\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setToastMessage('Authentication token not found. Please log in again.');\n          return;\n        }\n        const response = await axios.get('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data && response.data.users) {\n          setUsers(response.data.users);\n          setToastMessage('Users fetched successfully!');\n        } else {\n          setToastMessage('No users found.');\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error.response || error.message);\n        setToastMessage('Error fetching users.');\n      }\n    };\n    fetchUsers();\n  }, []);\n  const contactUser = user => {\n    window.location.href = `mailto:${user.email}?subject=Contact%20from%20SkillShare&body=Hi%20${user.name},`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"go back to\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/Dashboard\",\n        children: \" dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here are all the registered users:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toastMessage,\n      onClose: () => setToastMessage('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"profile-list\",\n      children: users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"profile-card\",\n        style: {\n          marginBottom: '20px',\n          listStyle: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile-image\",\n            src: user.photo || defaultProfilePic // Use defaultProfilePic if photo is not set\n            ,\n            alt: \"Profile\",\n            style: {\n              width: '50px',\n              height: '50px',\n              borderRadius: '50%',\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), \" (\", user.email, \")\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: user.description || 'No description available.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: user.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: skill\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => contactUser(user),\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"0VR6kO977ItZdDXMWnZVIZGPgF0=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","Toast","jsxDEV","_jsxDEV","Profile","_s","users","setUsers","toastMessage","setToastMessage","defaultProfilePic","fetchUsers","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","message","contactUser","user","window","location","href","email","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","length","map","style","marginBottom","listStyle","display","alignItems","src","photo","alt","width","height","borderRadius","marginRight","description","skills","skill","index","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/micha/OneDrive/Desktop/skillshare-hub/Front-end/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport Toast from '../components/Toast';\r\n\r\nconst Profile = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  const defaultProfilePic = '/default-profile.jpg'; // Path to the default profile picture\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          setToastMessage('Authentication token not found. Please log in again.');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('/users', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (response.data && response.data.users) {\r\n          setUsers(response.data.users);\r\n          setToastMessage('Users fetched successfully!');\r\n        } else {\r\n          setToastMessage('No users found.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error.response || error.message);\r\n        setToastMessage('Error fetching users.');\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const contactUser = (user) => {\r\n    window.location.href = `mailto:${user.email}?subject=Contact%20from%20SkillShare&body=Hi%20${user.name},`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h1>Profile</h1>\r\n      <p>\r\n        go back to<a href=\"/Dashboard\"> dashboard!</a>\r\n      </p>\r\n      <p>Here are all the registered users:</p>\r\n\r\n      {toastMessage && <Toast message={toastMessage} onClose={() => setToastMessage('')} />}\r\n\r\n      <ul className=\"profile-list\">\r\n        {users.length > 0 ? (\r\n          users.map((user) => (\r\n            <li className=\"profile-card\" key={user._id} style={{ marginBottom: '20px', listStyle: 'none' }}>\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <img className=\"profile-image\"\r\n                  src={user.photo || defaultProfilePic} // Use defaultProfilePic if photo is not set\r\n                  alt=\"Profile\"\r\n                  style={{\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    borderRadius: '50%',\r\n                    marginRight: '10px',\r\n                  }}\r\n                />\r\n                <div className=\"profile-details\">\r\n                  <strong>{user.name}</strong> ({user.email})\r\n                  <p>\r\n                    <i>{user.description || 'No description available.'}</i>\r\n                  </p>\r\n                  <ul>\r\n                    {user.skills.map((skill, index) => (\r\n                      <li key={index}>{skill}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <button className=\"btn\" onClick={() => contactUser(user)}>\r\n                Contact\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No users found.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}